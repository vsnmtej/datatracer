name: CI

on:
  push:
    branches:
      - '**'  # Trigger on any branch push
  pull_request:
    branches:
      - main  # Trigger on pull requests to the main branch
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build Docker image
      id: docker_build
      run: docker build . -t lensai_profiler_cpp:latest

    - name: Log in to Docker Hub
      if: ${{ success() && github.ref == 'refs/heads/main' }}
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Tag Docker image with latest
      if: ${{ success() && github.ref == 'refs/heads/main' }}
      run: docker tag lensai_profiler_cpp:latest ${{ secrets.DOCKER_HUB_USERNAME }}/lensai_profiler_cpp:latest

    - name: Tag Docker image with version
      if: ${{ success() && startsWith(github.ref, 'refs/tags/') }}
      run: |
        VERSION_TAG=${GITHUB_REF#refs/tags/}
        docker tag lensai_profiler_cpp:latest ${{ secrets.DOCKER_HUB_USERNAME }}/lensai_profiler_cpp:${VERSION_TAG}

    - name: Push Docker image with latest tag to Docker Hub
      if: ${{ success() && github.ref == 'refs/heads/main' }}
      run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/lensai_profiler_cpp:latest

    - name: Push Docker image with version tag to Docker Hub
      if: ${{ success() && startsWith(github.ref, 'refs/tags/') }}
      run: |
        VERSION_TAG=${GITHUB_REF#refs/tags/}
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/lensai_profiler_cpp:${VERSION_TAG}

    - name: Run container
      if: ${{ success() && github.ref == 'refs/heads/main' }}
      run: docker run --rm ${{ secrets.DOCKER_HUB_USERNAME }}/lensai_profiler_cpp:latest /bin/bash -c "echo 'Container started successfully'"

    - name: Set up Doxygen
      if: ${{ success() }}
      run: sudo apt-get install -y doxygen graphviz

    - name: Generate Doxygen documentation
      if: ${{ success() }}
      run: doxygen Doxyfile

    - name: Create .nojekyll file
      run: echo '' > ./documentation/html/.nojekyll

    - name: Deploy to GitLab Pages branch
      uses: peaceiris/actions-gh-pages@v3
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
      with:
        publish_branch: gh-pages
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./documentation/html
        force_orphan: true
